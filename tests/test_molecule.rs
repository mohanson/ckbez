#[test]
fn test_script() {
    let script = ckbez::core::Script::new(
        [
            0x82, 0xd7, 0x6d, 0x1b, 0x75, 0xfe, 0x2f, 0xd9, 0xa2, 0x7d, 0xfb, 0xaa, 0x65, 0xa0, 0x39, 0x22, 0x1a, 0x38,
            0x0d, 0x76, 0xc9, 0x26, 0xf3, 0x78, 0xd3, 0xf8, 0x1c, 0xf3, 0xe7, 0xe1, 0x3f, 0x2e,
        ],
        ckbez::core::SCRIPT_HASH_TYPE_TYPE,
        vec![0x00, 0x01, 0x02, 0x03],
    );
    assert_eq!(ckbez::core::Script::molecule_decode(&script.molecule()), script);
}

#[test]
fn test_tx() {
    let data = [
        0xe6, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0x1c, 0x00,
        0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00,
        0xd2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
        0x00, 0x4d, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
        0x00, 0x31, 0x00, 0x00, 0x00, 0xb5, 0x34, 0x9a, 0x6e, 0x6d, 0x40, 0x59, 0x81, 0x7e, 0x89, 0x32, 0x86, 0x31,
        0xe2, 0xb6, 0xe3, 0x09, 0xd1, 0xc9, 0x92, 0x36, 0x42, 0xe5, 0x07, 0x97, 0xc0, 0x93, 0x2b, 0x32, 0xa8, 0xc5,
        0x6b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    ];
    let tx = ckbez::core::Transaction::molecule_decode(&data);
    assert_eq!(tx.molecule(), data);
    assert_eq!(hex::encode(tx.raw.hash()), "8e533615e122908c5f1b216141e14f9182b87e82e7e47570cac28ca119206ea7");
}

#[test]
fn test_witness_args() {
    let witness_args =
        ckbez::core::WitnessArgs::new(Some(vec![0x00, 0x01, 0x02, 0x03]), Some(vec![0x04, 0x05, 0x06, 0x07]), None);
    assert_eq!(ckbez::core::WitnessArgs::molecule_decode(&witness_args.molecule()), witness_args);
}
